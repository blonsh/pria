#!/usr/bin/env python3
"""
Script para probar la funcionalidad final de edici√≥n de ciclos escolares.
"""

import webbrowser
import time
import os
import sys
import django
from datetime import date

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'pria.settings')
django.setup()

from workcenter.models import SchoolCycle

def test_final_functionality():
    """Prueba la funcionalidad final de edici√≥n de ciclos escolares."""
    
    print("=== Probando Funcionalidad Final de Edici√≥n ===\n")
    
    # Obtener un ciclo para editar
    cycle = SchoolCycle.objects.first()
    
    if not cycle:
        print("‚ùå No hay ciclos escolares disponibles.")
        print("   Ejecuta primero: python3 create_sample_data.py")
        return
    
    duration = (cycle.end_date - cycle.start_date).days
    
    print(f"üìä Datos del ciclo de prueba:")
    print(f"  ‚Ä¢ Nombre: {cycle.name}")
    print(f"  ‚Ä¢ Centro: {cycle.work_center.name}")
    print(f"  ‚Ä¢ Duraci√≥n: {duration} d√≠as")
    print(f"  ‚Ä¢ Estado: {'Activo' if cycle.start_date <= date.today() <= cycle.end_date else 'Inactivo'}")
    
    # URLs a probar
    urls = [
        "http://127.0.0.1:8000/workcenter/schoolcycles/",
        f"http://127.0.0.1:8000/workcenter/schoolcycles/{cycle.pk}/edit/",
    ]
    
    print(f"\nüåê Abriendo navegador para probar:")
    print(f"  1. Lista de ciclos: {urls[0]}")
    print(f"  2. Editar ciclo '{cycle.name}': {urls[1]}")
    
    # Abrir cada URL
    for i, url in enumerate(urls, 1):
        print(f"\nüì± Abriendo {i}/2: {url}")
        webbrowser.open(url)
        time.sleep(3)  # Pausa entre aperturas
    
    print(f"\n‚úÖ Navegador abierto para verificar funcionalidad")
    print(f"   Verifica lo siguiente:")
    print(f"   ‚Ä¢ En la lista: Botones azules 'Editar' visibles")
    print(f"   ‚Ä¢ En el formulario: Informaci√≥n del ciclo mostrada")
    print(f"   ‚Ä¢ Duraci√≥n: {duration} d√≠as calculada correctamente")
    print(f"   ‚Ä¢ Bot√≥n 'Actualizar Ciclo' p√∫rpura visible")
    print(f"   ‚Ä¢ Sin errores de template")
    
    print(f"\nüéØ Funcionalidades implementadas:")
    print(f"  ‚úÖ Vista de edici√≥n funcional")
    print(f"  ‚úÖ Template sin errores")
    print(f"  ‚úÖ Botones visibles y funcionales")
    print(f"  ‚úÖ C√°lculo de duraci√≥n correcto")
    print(f"  ‚úÖ Validaci√≥n de formularios")
    print(f"  ‚úÖ Redirecci√≥n despu√©s de guardar")
    print(f"  ‚úÖ Mensajes de √©xito/error")
    print(f"  ‚úÖ Navegaci√≥n entre secciones")

if __name__ == '__main__':
    test_final_functionality() 