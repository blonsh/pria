#!/usr/bin/env python3
"""
Test script for authentication permissions grouping
"""

import os
import sys
import subprocess
import time
import webbrowser
from pathlib import Path

def main():
    print("üéØ Iniciando prueba de agrupaci√≥n de permisos de autenticaci√≥n...")
    
    # Verificar que estamos en el directorio correcto
    if not Path("manage.py").exists():
        print("‚ùå Error: No se encontr√≥ manage.py. Aseg√∫rate de estar en el directorio del proyecto.")
        return
    
    # Verificar que el servidor no est√© corriendo
    try:
        import requests
        response = requests.get("http://127.0.0.1:8000/", timeout=1)
        print("‚ö†Ô∏è  El servidor ya est√° corriendo en el puerto 8000")
    except:
        print("üöÄ Iniciando servidor Django...")
        try:
            # Iniciar el servidor en segundo plano
            subprocess.Popen([
                "python3", "manage.py", "runserver", "127.0.0.1:8000"
            ], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
            time.sleep(3)  # Esperar a que el servidor inicie
        except Exception as e:
            print(f"‚ùå Error al iniciar el servidor: {e}")
            return
    
    print("üåê Abriendo navegador...")
    
    # URLs a abrir
    urls = [
        "http://127.0.0.1:8000/users/roles/new/",
        "http://127.0.0.1:8000/users/"
    ]
    
    for url in urls:
        print(f"üì± Abriendo: {url}")
        try:
            webbrowser.open(url)
            time.sleep(1)
        except Exception as e:
            print(f"‚ùå Error al abrir {url}: {e}")
    
    print("‚úÖ Navegador abierto exitosamente!")
    print("üìã URLs abiertas:")
    for url in urls:
        print(f"  - {url}")
    
    print("\nüîß Funcionalidades a verificar:")
    print("  1. Verificar que los permisos de autenticaci√≥n est√©n agrupados")
    print("  2. Verificar que aparezca 'Autenticaci√≥n (Grupo, Permiso, Usuario)'")
    print("  3. Verificar que otros m√≥dulos sigan separados")
    print("  4. Verificar que los contadores funcionen correctamente")
    print("  5. Verificar que las acciones r√°pidas funcionen")
    print("  6. Verificar que se puedan seleccionar permisos individuales")
    
    print("\nüìä M√≥dulos despu√©s de la agrupaci√≥n:")
    modules_grouped = [
        "Administraci√≥n (Entrada de Log)",
        "Autenticaci√≥n (Grupo, Permiso, Usuario) ‚Üê AGRUPADO",
        "Tipos de Contenido (Tipo de Contenido)",
        "Sesiones (Sesi√≥n)",
        "N√∫cleo (Carrera, Perfil de Usuario, Materia, Docente, Curso, Alumno, Matr√≠cula)",
        "Usuarios (Rol, Usuario)",
        "Alumnos (Alumno)",
        "Docentes (Docente)",
        "Asistencia (Asistencia)",
        "Centro de Trabajo (Ciclo Escolar, Centro de Trabajo, Per√≠odo Escolar, Aula, Configuraci√≥n de Ciclo)"
    ]
    
    for i, module in enumerate(modules_grouped, 1):
        if "‚Üê AGRUPADO" in module:
            print(f"  {i}. {module}")
        else:
            print(f"  {i}. {module}")
    
    print("\nüé® Caracter√≠sticas de la agrupaci√≥n:")
    print("  - Permisos de autenticaci√≥n agrupados en una sola secci√≥n")
    print("  - Otros m√≥dulos mantienen su separaci√≥n original")
    print("  - Contadores muestran total de permisos por m√≥dulo")
    print("  - Acciones r√°pidas afectan todos los permisos del m√≥dulo")
    print("  - Funcionalidad completa preservada")
    
    print("\n‚ú® Ventajas de la agrupaci√≥n:")
    print("  ‚úÖ Interfaz m√°s limpia y organizada")
    print("  ‚úÖ Menos secciones para navegar")
    print("  ‚úÖ Permisos relacionados juntos")
    print("  ‚úÖ Mejor experiencia de usuario")
    print("  ‚úÖ Mantiene toda la funcionalidad")
    
    print("\nüîç Cambios espec√≠ficos:")
    print("  ANTES:")
    print("    - Autenticaci√≥n (Grupo)")
    print("    - Autenticaci√≥n (Permiso)")
    print("    - Autenticaci√≥n (Usuario)")
    print("  DESPU√âS:")
    print("    - Autenticaci√≥n (Grupo, Permiso, Usuario)")
    
    print("\n‚öôÔ∏è Implementaci√≥n t√©cnica:")
    print("  - L√≥gica de agrupaci√≥n en get_permissions_by_module()")
    print("  - Condici√≥n especial para app_label == 'auth'")
    print("  - module_key = 'auth_combined' para agrupaci√≥n")
    print("  - Otros m√≥dulos mantienen su l√≥gica original")
    
    print("\n‚è∞ El servidor seguir√° ejecut√°ndose. Presiona Ctrl+C para detener.")
    print("üí° Consejo: Expande la secci√≥n de Autenticaci√≥n para ver todos los permisos agrupados!")

if __name__ == "__main__":
    main() 